{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "So-Yummy API docs",
    "description": "API documentation for GoIT project 'So-Yummy'. [Backend github repository](https://github.com/SergSmilya/project-team_developer_007_node)",
    "contact": {
      "name": "developer-007",
      "url": "http://sergsmilya.github.io/project-team_developer_007_react/",
      "email": "devfinalproject.007@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://so-yummy-project.onrender.com"
    },
    {
      "url": "https://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Recipes",
      "description": "Recipes endpoints"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User's added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidBody"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Email already in use",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidBody"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong/Email not verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Email or password is wrong/Email not verified",
                      "example": "Email or password is wrong/Email not verified"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Current user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "NonAuthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonAuthorized"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonAuthorized"
                }
              }
            }
          }
        }
      }
    },
    "/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify token",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "description": "token (needed for all requests)",
            "required": true,
            "schema": {
              "type": "string",
              "items": {
                "type": "string"
              }
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend email verify",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)/Verification has already been passed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidBody"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/information": {
      "get": {
        "tags": ["Auth"],
        "summary": "Information User",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoUser"
                }
              }
            }
          },
          "401": {
            "description": "NonAuthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonAuthorized"
                }
              }
            }
          }
        }
      }
    },

    "/api/recipes/category-list": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Recipes List"
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Test"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 6
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "userData": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "64aa7af20583ec1247f1a088"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Verification letter",
            "example": "Verification letter was send to your email"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 6
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Test"
              },
              "avatar": {
                "type": "string",
                "description": "User's avatar",
                "example": "www.gravatar.com/avatar/7798eeee8a523306f0172f6776b6fa94"
              }
            }
          }
        }
      },
      "InvalidBody": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Invalid request body",
            "example": "missing required ... field"
          }
        }
      },
      "NonAuthorized": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Invalid token",
            "example": "Not authorized"
          }
        }
      },
      "UserNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User not found"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Test"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "example": "www.gravatar.com/avatar/7798eeee8a523306f0172f6776b6fa94"
          }
        }
      },
      "InfoUser": {
        "type": "object",
        "properties": {
          "newUser": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Test"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatar": {
                "type": "string",
                "description": "User's avatar",
                "example": "www.gravatar.com/avatar/7798eeee8a523306f0172f6776b6fa94"
              },
              "verify": {
                "type": "boolean",
                "description": "Verify user",
                "example": true
              },
              "subscription": {
                "type": "boolean",
                "description": "Subscription user",
                "example": false
              },
              "shoppingList": {
                "type": "array",
                "description": "ShoppingList user",
                "example": []
              },
              "ownRecipesCount": {
                "type": "integer",
                "description": "OwnRecipesCount user",
                "example": 0
              },
              "favoriteRecipesCount": {
                "type": "integer",
                "description": "FavoriteRecipesCount user",
                "example": 0
              },
              "daysCount": {
                "type": "integer",
                "description": "FavoriteRecipesCount user",
                "example": 0
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
